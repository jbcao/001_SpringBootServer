/**
 * @author caojianbang
 * @date 2020/11/14 14:21
 */
package com.src.practise.ooc_spring.oog_transaction;

/**
 * Spring事务管理
 *
 *       《数据库事务》：是一个被视为单一的工作单元的操作序列
 *
 *                      这些操作要么完整地执行，要么完全不执行
 *
 *                      可以描述为《ACID》：
 *
 *                                        原子性
 *
 *                                        一致性
 *
 *                                        隔离性
 *
 *                                        持久性
 *
 * 使用SQL发布到数据库中的事务的简单视图如下：
 *
 *       使用begin transaction 命令开始事务
 *
 *       使用SQL查询语句执行各种增删改查操作
 *
 *       如果所有操作执行成功，则执行提交操作，否则回滚所有操作
 *
 *
 *
 *
 *《局部事务》
 *          特定于一个单一的事务资源，如一个JDBC连接
 *
 *          局部事务管理在一个集中的计算环境中是有用的，
 *          该计算环境中应用程序组件和资源位于一个单位点，
 *          而事务管理只涉及到一个运行在一个单一机器中的本地数据管理器。
 *          局部事务更容易实现。
 *
 *
 *
 *
 *《全局事务》
 *         可以跨多个事务资源事务，如有一个分布式系统中事务
 *
 *         全局事务管理需要在分布式计算环境中，所有的资源都分布在多个系统中。
 *         在这种情况下事务管理需要同时在局部和全局范围内进行。
 *         分布式或全局事务跨多个系统执行，它的执行需要全局事务管理系统和所有相关系统的局部数据管理人员之间的协调。
 *
 *
 */


/**
 * 编程式vs声明式
 *
 *       《编程式事务管理》：在编程的帮助下管理事务
 *
 *                          给了极大的灵活性
 *
 *                          难以维护
 *
 *       《声明式事务管理》：从业务代码中分离事务管理
 *
 *                          使用注释
 *
 *                          或者XML配置管理事务
 *
 *        声明式事务管理比编程式事务管理更可取，尽管它不如编程式事务管理灵活，但它允许你通过代码控制事务。
 *
 *        但作为一种横切关注点，声明式事务管理可以使用 AOP 方法进行模块化。
 *
 *        Spring 支持使用 Spring AOP 框架的声明式事务管理。
 *
 */

/**
 * Spring事务抽象：
 *
 *      Spring事务管理五大属性：
 *
 *                            《隔离级别》
 *
 *                            《传播行为》
 *
 *                            《是否只读》
 *
 *                            《事务超时》
 *
 *                            《回滚规则》
 */